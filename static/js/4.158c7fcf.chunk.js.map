{"version":3,"sources":["components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.module.css","hoc/withAuthRedirect.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","DialogItem","props","path","id","className","style","dialog","to","activeClassName","activeLink","name","Message","message","maxLength50","maxLengthCreator","AddMessageformRedux","reduxForm","form","sendMessage","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","dialogsPage","dialogsElements","dialogs","map","e","key","messagesElements","messages","dialogsItem","values","newMessageBody","compose","connect","dispatch","addMessageActionCreator","Component","RedirectComponent","this","React"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,OAAS,2BAA2B,WAAa,iC,oBCAnED,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,YAAc,+B,oBCAxPD,EAAOC,QAAU,CAAC,QAAU,2B,2HCGxBC,EAA6B,SAACC,GAAD,MAAY,CAC3CC,OAAQD,EAAME,KAAKD,S,mCCONE,EARI,SAACC,GAElB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACE,yBAAKC,UAAaC,IAAMC,QAAQ,kBAAC,IAAD,CAASC,GAAIL,EAAMM,gBAAiBH,IAAMI,YAAaR,EAAMS,Q,oCCElFC,EAPC,SAACV,GAEf,OACE,yBAAKG,UAAaC,IAAMO,SAAUX,EAAMW,U,iCCwBtCC,EAAcC,YAAiB,IAc/BC,EAAsBC,YAAU,CAACC,KAAM,yBAAjBD,EAZL,SAACf,GACtB,OACE,0BAAMG,UAAWC,IAAMa,YAAaC,SAAUlB,EAAMmB,cAClD,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IACZC,SAAU,CAACC,IAAUZ,GACrBH,KAAK,iBACLgB,YAAY,uBAEpB,oDAMWC,EArCC,SAAC1B,GAEf,IAAIJ,EAAQI,EAAM2B,YACdC,EAAkBhC,EAAMiC,QAAQC,KAAK,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYtB,KAAOsB,EAAEtB,KAAOuB,IAAKD,EAAE7B,GAAIA,GAAK6B,EAAE7B,QACxF+B,EAAmBrC,EAAMsC,SAASJ,KAAK,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAASpB,QAAUoB,EAAEpB,QAAUqB,IAAKD,EAAE7B,QAMtF,OAAIF,EAAMH,OAGR,yBAAKM,UAAcC,IAAMyB,SACvB,yBAAK1B,UAAcC,IAAM+B,aAAzB,IAA0CP,EAA1C,KACA,yBAAKzB,UAAcC,IAAM8B,UAAzB,IAAuCD,EAAvC,KACA,kBAACnB,EAAD,CAAqBI,SAVH,SAACkB,GACrBpC,EAAMiB,YAAYmB,EAAOC,oBAGF,kBAAC,IAAD,CAAU/B,GAAI,YCC1BgC,sBACbC,aAfoB,SAAC3C,GACrB,MAAO,CACL+B,YAAa/B,EAAM+B,gBAIE,SAACa,GACxB,MAAO,CACLvB,YAAa,SAACoB,GACZG,EAASC,YAAwBJ,UJPP,SAACK,GAAe,IACxCC,EADuC,iLAGzC,OAAIC,KAAK5C,MAAMH,OAER,kBAAC6C,EAAcE,KAAK5C,OAFG,kBAAC,IAAD,CAAUM,GAAG,eAHF,GACbuC,IAAMH,WAUtC,OAFqCH,YAAQ5C,EAAR4C,CAAqCI,KIG7DL,CAGZZ","file":"static/js/4.158c7fcf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__2SG7z\",\"activeLink\":\"DialogItem_activeLink__2Jbrr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1etDR\",\"dialogsItem\":\"Dialogs_dialogsItem__34Ner\",\"dialog\":\"Dialogs_dialog__1PRQu\",\"active\":\"Dialogs_active__30xBS\",\"messages\":\"Dialogs_messages__XpVUq\",\"message\":\"Dialogs_message__2Qbsz\",\"sendMessage\":\"Dialogs_sendMessage__3mbDK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2v_w4\"};","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if(!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n      return <Component {...this.props} />\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent);\r\n\r\n  return ConnectedAuthRedirectComponent\r\n}","import React from 'react';\r\nimport style from './DialogItem.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n\r\n  let path = \"/dialogs/\" + props.id;\r\n  return (\r\n    <div className = {style.dialog}><NavLink to={path} activeClassName={style.activeLink}>{props.name}</NavLink></div>\r\n  );\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport style from './Message.module.css';\r\n\r\nconst Message = (props) => {\r\n\r\n  return (\r\n    <div className = {style.message}>{props.message}</div>\r\n  );\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport style from './Dialogs.module.css';\r\nimport Message from './Message/Message';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../common/FormsControls/FormsControls';\r\nimport { required, maxLengthCreator } from '../../utils/validators/validator';\r\n\r\nconst Dialogs = (props) => {\r\n\r\n  let state = props.dialogsPage;\r\n  let dialogsElements = state.dialogs.map( e => <DialogItem name={ e.name } key={e.id} id={ e.id }/>);\r\n  let messagesElements = state.messages.map( e => <Message message={ e.message } key={e.id}/>);\r\n\r\n  const addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody);//диспатчим значение из формы\r\n  };\r\n\r\n  if(!props.isAuth) return <Redirect to={\"/Login\"} />; //если не золигинины то делается редирект на страницу login\r\n\r\n  return (\r\n    <div className = { style.dialogs }>\r\n      <div className = { style.dialogsItem }> { dialogsElements } </div>\r\n      <div className = { style.messages }> { messagesElements } </div>\r\n      <AddMessageformRedux onSubmit={addNewMessage}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50); //максимальная длина 50 символов\r\n\r\nconst AddMessageform = (props) => { //вынести отдельной компонентой\r\n  return (\r\n    <form className={style.sendMessage} onSubmit={props.handleSubmit}>\r\n      <Field component={Textarea}\r\n            validate={[required, maxLength50 ]}\r\n            name=\"newMessageBody\"\r\n            placeholder=\"Enter your message\" />\r\n\r\n    <button >Send message</button></form>\r\n  )\r\n}\r\n\r\nconst AddMessageformRedux = reduxForm({form: \"dialogsAddMessageForm\"}) (AddMessageform);\r\n\r\nexport default Dialogs;","import { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { addMessageActionCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage\r\n  }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(addMessageActionCreator(newMessageBody));\r\n    }\r\n  }\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n) (Dialogs) //второй раз вызывается функция которая вернулась при вызове первого раза compose;"],"sourceRoot":""}